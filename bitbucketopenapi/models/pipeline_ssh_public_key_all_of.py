# coding: utf-8

"""
    Bitbucket API

    Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@bitbucket.org
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PipelineSshPublicKeyAllOf(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'key': 'str',
        'key_type': 'str',
        'md5_fingerprint': 'str',
        'sha256_fingerprint': 'str'
    }

    attribute_map = {
        'key': 'key',
        'key_type': 'key_type',
        'md5_fingerprint': 'md5_fingerprint',
        'sha256_fingerprint': 'sha256_fingerprint'
    }

    def __init__(self, key=None, key_type=None, md5_fingerprint=None, sha256_fingerprint=None):  # noqa: E501
        """PipelineSshPublicKeyAllOf - a model defined in OpenAPI"""  # noqa: E501

        self._key = None
        self._key_type = None
        self._md5_fingerprint = None
        self._sha256_fingerprint = None
        self.discriminator = None

        if key is not None:
            self.key = key
        if key_type is not None:
            self.key_type = key_type
        if md5_fingerprint is not None:
            self.md5_fingerprint = md5_fingerprint
        if sha256_fingerprint is not None:
            self.sha256_fingerprint = sha256_fingerprint

    @property
    def key(self):
        """Gets the key of this PipelineSshPublicKeyAllOf.  # noqa: E501

        The base64 encoded public key.  # noqa: E501

        :return: The key of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this PipelineSshPublicKeyAllOf.

        The base64 encoded public key.  # noqa: E501

        :param key: The key of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def key_type(self):
        """Gets the key_type of this PipelineSshPublicKeyAllOf.  # noqa: E501

        The type of the public key.  # noqa: E501

        :return: The key_type of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :rtype: str
        """
        return self._key_type

    @key_type.setter
    def key_type(self, key_type):
        """Sets the key_type of this PipelineSshPublicKeyAllOf.

        The type of the public key.  # noqa: E501

        :param key_type: The key_type of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :type: str
        """

        self._key_type = key_type

    @property
    def md5_fingerprint(self):
        """Gets the md5_fingerprint of this PipelineSshPublicKeyAllOf.  # noqa: E501

        The MD5 fingerprint of the public key.  # noqa: E501

        :return: The md5_fingerprint of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :rtype: str
        """
        return self._md5_fingerprint

    @md5_fingerprint.setter
    def md5_fingerprint(self, md5_fingerprint):
        """Sets the md5_fingerprint of this PipelineSshPublicKeyAllOf.

        The MD5 fingerprint of the public key.  # noqa: E501

        :param md5_fingerprint: The md5_fingerprint of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :type: str
        """

        self._md5_fingerprint = md5_fingerprint

    @property
    def sha256_fingerprint(self):
        """Gets the sha256_fingerprint of this PipelineSshPublicKeyAllOf.  # noqa: E501

        The SHA-256 fingerprint of the public key.  # noqa: E501

        :return: The sha256_fingerprint of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :rtype: str
        """
        return self._sha256_fingerprint

    @sha256_fingerprint.setter
    def sha256_fingerprint(self, sha256_fingerprint):
        """Sets the sha256_fingerprint of this PipelineSshPublicKeyAllOf.

        The SHA-256 fingerprint of the public key.  # noqa: E501

        :param sha256_fingerprint: The sha256_fingerprint of this PipelineSshPublicKeyAllOf.  # noqa: E501
        :type: str
        """

        self._sha256_fingerprint = sha256_fingerprint

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PipelineSshPublicKeyAllOf):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
